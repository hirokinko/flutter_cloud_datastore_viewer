// Mocks generated by Mockito 5.0.10 from annotations
// in flutter_cloud_datastore_viewer/test/entities_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:flutter_cloud_datastore_viewer/models/connection.dart' as _i3;
import 'package:flutter_cloud_datastore_viewer/models/entities.dart' as _i4;
import 'package:flutter_cloud_datastore_viewer/patched_datastore/v1.dart'
    as _i2;
import 'package:flutter_cloud_datastore_viewer/data_access_objects/clouddatastore_dao.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeDatastoreApi extends _i1.Fake implements _i2.DatastoreApi {}

class _FakeCloudDatastoreMetadata extends _i1.Fake
    implements _i3.CloudDatastoreMetadata {}

class _FakeEntityList extends _i1.Fake implements _i4.EntityList {}

/// A class which mocks [CloudDatastoreRepostiry].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudDatastoreDao extends _i1.Mock implements _i5.CloudDatastoreDao {
  MockCloudDatastoreDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DatastoreApi get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeDatastoreApi()) as _i2.DatastoreApi);
  @override
  set client(_i2.DatastoreApi? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client),
          returnValueForMissingStub: null);
  @override
  String get projectId =>
      (super.noSuchMethod(Invocation.getter(#projectId), returnValue: '')
          as String);
  @override
  set projectId(String? _projectId) =>
      super.noSuchMethod(Invocation.setter(#projectId, _projectId),
          returnValueForMissingStub: null);
  @override
  _i6.Future<List<String?>> namespaces() =>
      (super.noSuchMethod(Invocation.method(#namespaces, []),
              returnValue: Future<List<String?>>.value(<String?>[]))
          as _i6.Future<List<String?>>);
  @override
  _i6.Future<List<String>> kinds(String? namespace) =>
      (super.noSuchMethod(Invocation.method(#kinds, [namespace]),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i6.Future<List<String>>);
  @override
  _i6.Future<_i3.CloudDatastoreMetadata> getMetadata(String? namespace) =>
      (super.noSuchMethod(Invocation.method(#getMetadata, [namespace]),
              returnValue: Future<_i3.CloudDatastoreMetadata>.value(
                  _FakeCloudDatastoreMetadata()))
          as _i6.Future<_i3.CloudDatastoreMetadata>);
  @override
  _i6.Future<_i4.EntityList> find(String? kindName, String? namespace,
          String? startCursor, String? previousPageStartCursor,
          {int? limit = 50}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #find,
                  [kindName, namespace, startCursor, previousPageStartCursor],
                  {#limit: limit}),
              returnValue: Future<_i4.EntityList>.value(_FakeEntityList()))
          as _i6.Future<_i4.EntityList>);
}
